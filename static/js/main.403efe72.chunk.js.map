{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","className","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","contacts","map","contact","id","onClick","uuidv4","defaultProps","Filter","doc","document","setFilterValue","toUpperCase","setFilterToState","getElementById","classList","remove","inputFieldInFront","add","INITIAL_STATE","filter","App","formSubmitHandler","data","repeatControl","cur","includes","arrayCont","alert","elementDelete","arr","idContact","elem","deleteContactFromContactList","newArrAfterDel","filterData","filterArr","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.403efe72.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ContactForm extends Component {\n\tstate = {\n\t\tname: '',\n\t\tnumber: '',\n\t}\n\thandleChange = event => {\n\t\tconst { name, value } = event.currentTarget\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tlet contactForAdd = { name: this.state.name, number: this.state.number }\n\t\tthis.props.onSubmitData(contactForAdd)\n\t\tthis.reset()\n\t}\n\n\treset = () => {\n\t\tthis.setState({ name: '', number: '' })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Contact\">\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"label\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"label\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tNumber\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\tpattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n\t\t\t\t\t\t\t\ttitle=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.number}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button className=\"buttonClear\" type=\"submit\">\n\t\t\t\t\t\tAdd contact\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nContactForm.propTypes = {\n\tonSubmitData: PropTypes.func.isRequired,\n}\nexport default ContactForm\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nclass ContactList extends Component {\r\n\tdeleteId = Id => this.props.del(Id)\r\n\r\n\tcreateList = () => {\r\n\t\treturn this.props.contacts.map(contact => {\r\n\t\t\treturn (\r\n\t\t\t\t<li className=\"contactClass\" key={uuidv4()} id={contact.id}>\r\n\t\t\t\t\t{`${contact.name}: ${contact.number}`}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"buttonClear\"\r\n\t\t\t\t\t\tdata-id={contact.id}\r\n\t\t\t\t\t\tonClick={() => this.deleteId(contact.id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"PhoneBook\">\r\n\t\t\t\t<ul>{this.createList()}</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.array.isRequired,\r\n\tdel: PropTypes.func.isRequired,\r\n}\r\nContactList.defaultProps = {\r\n\tcontacts: [],\r\n}\r\n\r\nexport default ContactList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Filter extends Component {\r\n\tdoc = document\r\n\r\n\tsetFilterValue = event => {\r\n\t\tlet value = event.currentTarget.value.toUpperCase()\r\n\t\tthis.props.setFilterToState(value)\r\n\t\tthis.doc.getElementById('buttonClear').classList.remove('buttonClearID')\r\n\t}\r\n\r\n\tinputFieldInFront = () => {\r\n\t\t// console.log(document.getElementById('findContacts').current)\r\n\t\tthis.doc.getElementById('findContacts').value = ''\r\n\t\tthis.props.setFilterToState('')\r\n\r\n\t\tthis.doc.getElementById('buttonClear').classList.add('buttonClearID')\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p className=\"findContacts\">Find contacts by name</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"findContacts\"\r\n\t\t\t\t\tclassName=\"Contact\"\r\n\t\t\t\t\tonChange={this.setFilterValue}></input>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"buttonClear\"\r\n\t\t\t\t\tonClick={this.inputFieldInFront}\r\n\t\t\t\t\tclassName=\"buttonClear buttonClearID\"\r\n\t\t\t\t\ttype=\"button\">\r\n\t\t\t\t\tClear\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nFilter.propTypes = {\r\n\tsetFilterToState: PropTypes.func.isRequired,\r\n}\r\nexport default Filter\r\n","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport ContactForm from './Components/ContactForm/ContactForm'\nimport ContactList from './Components/ContactList/ContactList'\nimport Filter from './Components/Filter/Filter'\nimport './App.css'\n\nconst INITIAL_STATE = {\n\tcontacts: [\n\t\t{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n\t\t{ id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n\t\t{ id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n\t\t{ id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n\t],\n\tfilter: '',\n\tname: '',\n\tnumber: '',\n}\n\nclass App extends React.Component {\n\tstate = { ...INITIAL_STATE }\n\n\tformSubmitHandler = data => {\n\t\tthis.repeatControl(data)\n\t}\n\n\trepeatControl = data => {\n\t\tlet nameArray = this.state.contacts.map(cur => cur.name)\n\t\tif (!nameArray.includes(data.name)) {\n\t\t\tlet arrayCont = [\n\t\t\t\t...this.state.contacts,\n\t\t\t\t{ id: uuidv4(), name: data.name, number: data.number },\n\t\t\t]\n\t\t\treturn this.setState({ ...this.state, contacts: arrayCont })\n\t\t} else {\n\t\t\talert(' Контакт вже є у телефонній книзі!!!')\n\t\t}\n\t}\n\n\telementDelete = (arr, idContact) => {\n\t\treturn arr.filter(elem => elem.id !== idContact)\n\t}\n\n\tdeleteContactFromContactList = idContact => {\n\t\tlet newArrAfterDel = this.elementDelete(this.state.contacts, idContact)\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tcontacts: [...newArrAfterDel],\n\t\t})\n\t}\n\n\tsetFilterToState = filterData => {\n\t\tthis.setState({ ...this.state, filter: `${filterData}` })\n\t}\n\n\tfilterArr = filterArr => {\n\t\treturn filterArr.filter(cur =>\n\t\t\tcur.name.toUpperCase().includes(this.state.filter)\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { contacts } = this.state\n\n\t\treturn (\n\t\t\t<div className=\"PhoneBookBlock\">\n\t\t\t\t<div className=\"Contact\">\n\t\t\t\t\t<p>PhoneBook</p>\n\t\t\t\t\t<ContactForm onSubmitData={this.formSubmitHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Contact Pad\">\n\t\t\t\t\t<p className=\"Filter\">Contacts</p>\n\t\t\t\t\t<Filter setFilterToState={this.setFilterToState} />\n\t\t\t\t\t<ContactList\n\t\t\t\t\t\tcontacts={this.filterArr(contacts)}\n\t\t\t\t\t\tdel={this.deleteContactFromContactList}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}